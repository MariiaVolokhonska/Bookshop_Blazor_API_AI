@page "/cart-page"
@using bookshop.Models
@rendermode InteractiveServer
@inject NavigationManager Navigation
@inject CartService CartService

<h1>Cart</h1>
<table class="table table-hover">
    <thead>
        <tr>
            <th>Book</th>
            <th>Price in PLN</th>
            <th> </th>
        </tr>
    </thead>
    <tbody>
        @if (CartService.BooksInCart == null)
        {
            <h3>Loading...</h3>
        }
        else
        {
            @foreach (Book bk in CartService.BooksInCart)
            {
                <tr>
                    <td>
                        @bk.Title
                    </td>
                    <td>
                        @bk.Price
                    </td>
                    <td>
                        <button @onclick="(e)=>CartService.DeleteFromCart(bk)">Remove item</button>
                    </td>
                </tr>
            }
        }
       
    </tbody>
    

</table>
<h3>Total price: @CartService.GetTotalPrice() PLN </h3>

@code {
    private string? name;
    List<Book> booksInCart = new List<Book>();

    Book book = new Book();

    BooksAPI api = new BooksAPI();
    protected override async Task OnInitializedAsync()
    {
        var uri = new Uri(Navigation.Uri);
        var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
        name = query["title"] != null ? query["title"].ToString() : null;

        if (!string.IsNullOrEmpty(name))
        {
            
            book = await api.GetBookByTitle(name);

            if (book != null)
            {
                
                if (!CartService.BooksInCart.Any(b => b.Title == book.Title))
                {
                    CartService.AddToCart(book); 
                }
            }
        
    }
   

}
}
